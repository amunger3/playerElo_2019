filter(Rank < 26) %>%
rename(Elo_Rank = Rank,
First_Name = first_name,
Last_Name = last_name,
Position = Pos,
wOBA = woba) %>%
select(Elo_Rank, First_Name, Last_Name, Batting_Team, Position, preseasonElo, currentElo, wOBA, OPS)
View(b19Elo25)
View(b19Elo25)
b19Elo25 <- b19Elo %>%
filter(Rank < 26) %>%
rename('Elo Rank' = Rank,
'First Name' = first_name,
'Last Name' = last_name,
'Batting Team' = Batting_Team,
Position = Pos,
wOBA = woba) %>%
select('Elo Rank', 'First Name', 'Last Name', 'Batting Team', Position, preseasonElo, currentElo, wOBA, OPS)
formattable(b19Elo25, align =c ("l","l","l","l","l", "c", "c", "c", "c"), list(
`Elo Rank` = formatter("span", style = ~ style(color = "grey",font.weight = "bold")),
`First Name` = formatter("span", style = ~ style(color = "grey",font.weight = "bold")),
`Last Name` = formatter("span", style = ~ style(color = "grey",font.weight = "bold")),
`Batting Team` = formatter("span", style = ~ style(color = "grey",font.weight = "bold")),
`Position` = formatter("span", style = ~ style(color = "grey",font.weight = "bold")),
`preseasonElo`= color_tile(customBlue0, customBlue),
`currentElo`= color_tile(customBlue0, customBlue),
`woba`= color_tile(customBlue0, customBlue),
`OPS`= color_tile(customBlue0, customBlue)))
formattable(b19Elo25, align =c ("l","l","l","l","l", "c", "c", "c", "c"), list(
`Elo Rank` = formatter("span", style = ~ style(color = "grey",font.weight = "bold")),
`First Name` = formatter("span", style = ~ style(color = "grey",font.weight = "bold")),
`Last Name` = formatter("span", style = ~ style(color = "grey",font.weight = "bold")),
`Batting Team` = formatter("span", style = ~ style(color = "grey",font.weight = "bold")),
`Position` = formatter("span", style = ~ style(color = "grey",font.weight = "bold")),
`preseasonElo`= color_tile(customBlue0, customBlue),
`currentElo`= color_tile(customBlue0, customBlue),
`wOBA`= color_tile(customBlue0, customBlue),
`OPS`= color_tile(customBlue0, customBlue)))
p19Elo25 <- p19Elo %>%
filter(Rank < 26) %>%
rename('Elo Rank' = Rank,
'First Name' = first_name,
'Last Name' = last_name,
'Pitching Team' = Pitching_Team,
wOBA = woba) %>%
select('Elo Rank', 'First Name', 'Last Name', 'Batting Team', preseasonElo, currentElo, wOBA, ERA, WHIP)
p19Elo25 <- p19Elo %>%
filter(Rank < 26) %>%
rename('Elo Rank' = Rank,
'First Name' = first_name,
'Last Name' = last_name,
'Pitching Team' = Pitching_Team,
wOBA = woba) %>%
select('Elo Rank', 'First Name', 'Last Name', 'Pitching Team', preseasonElo, currentElo, wOBA, ERA, WHIP)
formattable(p19Elo25, align =c ("l","l","l","l", "c", "c", "c", "c", "c"), list(
`Elo Rank` = formatter("span", style = ~ style(color = "grey",font.weight = "bold")),
`First Name` = formatter("span", style = ~ style(color = "grey",font.weight = "bold")),
`Last Name` = formatter("span", style = ~ style(color = "grey",font.weight = "bold")),
`Pitching Team` = formatter("span", style = ~ style(color = "grey",font.weight = "bold")),
`preseasonElo`= color_tile(customBlue0, customBlue),
`currentElo`= color_tile(customBlue0, customBlue),
`wOBA`= color_tile(customBlue0, customBlue),
`ERA`= color_tile(customBlue0, customBlue),
`WHIP`= color_tile(customBlue0, customBlue)))
formattable(p19Elo25, align =c ("l","l","l","l", "c", "c", "c", "c", "c"), list(
`Elo Rank` = formatter("span", style = ~ style(color = "grey",font.weight = "bold")),
`First Name` = formatter("span", style = ~ style(color = "grey",font.weight = "bold")),
`Last Name` = formatter("span", style = ~ style(color = "grey",font.weight = "bold")),
`Pitching Team` = formatter("span", style = ~ style(color = "grey",font.weight = "bold")),
`preseasonElo`= color_tile(customBlue0, customBlue),
`currentElo`= color_tile(customBlue0, customBlue),
`wOBA`= color_tile(customBlue0, customBlue),
`ERA`= color_tile(customBlue0, customBlue),
`WHIP`= color_tile(customBlue0, customBlue)))
save.image("~/Desktop/Junior - Summer/Wyner Research/playerEloWorkspace.RData")
load("~/Desktop/Junior - Summer/Wyner Research/playerEloWorkspace.RData")
library(formattable)
require(tidyverse)
require(data.table)
formattable(p19Elo25, align =c ("l","l","l","l", "c", "c", "c", "c", "c"), list(
`Elo Rank` = formatter("span", style = ~ style(color = "grey",font.weight = "bold")),
`First Name` = formatter("span", style = ~ style(color = "grey",font.weight = "bold")),
`Last Name` = formatter("span", style = ~ style(color = "grey",font.weight = "bold")),
`Pitching Team` = formatter("span", style = ~ style(color = "grey",font.weight = "bold")),
`preseasonElo`= color_tile(customBlue0, customBlue),
`currentElo`= color_tile(customBlue0, customBlue),
`wOBA`= color_tile(customBlue0, customBlue),
`ERA`= color_tile(customBlue0, customBlue),
`WHIP`= color_tile(customBlue0, customBlue)))
eloTeam19 <- b19EloTeam %>%
rename(Team = Batting_Team) %>%
left_join(p19EloTeam, by = c("Team" = "Pitching_Team")) %>%
mutate(aggTeamElo = (aggBattingElo + aggPitchingElo) / 2) %>%
left_join(RS19Team, by = c("Team" = "Batting_Team")) %>%
left_join(RA19Team, by = c("Team" = "Pitching_Team")) %>%
arrange(desc(aggEloTeam))
eloTeam19 <- eloTeam19 %>%
mutate(Rank = seq.int(nrow(eloTeam19))) %>%
rename('Team Batting Elo' = aggBattingElo,
'Team Pitching Elo' = aggPitchingElo,
'Aggregate Team Elo', aggTeamElo) %>%
select(Rank, everything())
eloTeam19 <- eloTeam19 %>%
mutate(Rank = seq.int(nrow(eloTeam19))) %>%
rename('Team Batting Elo' = aggBattingElo,
'Team Pitching Elo' = aggPitchingElo,
'Aggregate Team Elo', aggTeamElo,
'Runs Scored', Runs_Scored,
'Runs Against', Runs_Against) %>%
select(Rank, 'Team Batting Elo', 'Team Pitching Elo', 'Aggregate Team Elo', 'Runs Scored', 'Runs Against')
eloTeam19 <- b19EloTeam %>%
rename(Team = Batting_Team) %>%
left_join(p19EloTeam, by = c("Team" = "Pitching_Team")) %>%
mutate(aggTeamElo = (aggBattingElo + aggPitchingElo) / 2) %>%
left_join(RS19Team, by = c("Team" = "Batting_Team")) %>%
left_join(RA19Team, by = c("Team" = "Pitching_Team")) %>%
arrange(desc(aggEloTeam))
eloTeam19 <- eloTeam19 %>%
mutate(Rank = seq.int(nrow(eloTeam19))) %>%
rename('Team Batting Elo' = aggBattingElo,
'Team Pitching Elo' = aggPitchingElo,
'Aggregate Team Elo', aggTeamElo,
'Runs Scored', Runs_Scored,
'Runs Against', Runs_Against) %>%
select(Rank, 'Team Batting Elo', 'Team Pitching Elo', 'Aggregate Team Elo', 'Runs Scored', 'Runs Against')
rlang::last_error()
eloTeam19 <- b19EloTeam %>%
rename(Team = Batting_Team) %>%
left_join(p19EloTeam, by = c("Team" = "Pitching_Team")) %>%
mutate(aggTeamElo = (aggBattingElo + aggPitchingElo) / 2) %>%
left_join(RS19Team, by = c("Team" = "Batting_Team")) %>%
left_join(RA19Team, by = c("Team" = "Pitching_Team")) %>%
arrange(desc(aggEloTeam))
eloTeam19 <- b19EloTeam %>%
rename(Team = Batting_Team) %>%
left_join(p19EloTeam, by = c("Team" = "Pitching_Team")) %>%
mutate(aggTeamElo = (aggBattingElo + aggPitchingElo) / 2) %>%
left_join(RS19Team, by = c("Team" = "Batting_Team")) %>%
left_join(RA19Team, by = c("Team" = "Pitching_Team")) %>%
arrange(desc(aggTeamElo))
eloTeam19 <- eloTeam19 %>%
mutate(Rank = seq.int(nrow(eloTeam19))) %>%
rename('Team Batting Elo' = aggBattingElo,
'Team Pitching Elo' = aggPitchingElo,
'Aggregate Team Elo', aggTeamElo,
'Runs Scored', Runs_Scored,
'Runs Against', Runs_Against) %>%
select(Rank, 'Team Batting Elo', 'Team Pitching Elo', 'Aggregate Team Elo', 'Runs Scored', 'Runs Against')
eloTeam19 <- b19EloTeam %>%
rename(Team = Batting_Team) %>%
left_join(p19EloTeam, by = c("Team" = "Pitching_Team")) %>%
mutate(aggTeamElo = (aggBattingElo + aggPitchingElo) / 2) %>%
left_join(RS19Team, by = c("Team" = "Batting_Team")) %>%
left_join(RA19Team, by = c("Team" = "Pitching_Team")) %>%
arrange(desc(aggTeamElo))
eloTeam19 <- eloTeam19 %>%
mutate(Rank = seq.int(nrow(eloTeam19))) %>%
rename('Team Batting Elo' = aggBattingElo,
'Team Pitching Elo' = aggPitchingElo,
'Aggregate Team Elo', aggTeamElo,
'Runs Scored', Runs_Scored,
'Runs Against', Runs_Against) %>%
select(Rank, 'Team Batting Elo', 'Team Pitching Elo', 'Aggregate Team Elo', 'Runs Scored', 'Runs Against')
eloTeam19 <- eloTeam19 %>%
mutate(Rank = seq.int(nrow(eloTeam19))) %>%
rename('Team Batting Elo' = aggBattingElo,
'Team Pitching Elo' = aggPitchingElo,
'Aggregate Team Elo', aggTeamElo,
'Runs Scored', Runs_Scored,
'Runs Against', Runs_Against) %>%
select(Rank, 'Team Batting Elo', 'Team Pitching Elo', 'Aggregate Team Elo', 'Runs Scored', 'Runs Against')
rlang::last_error()
rlang::last_error()
View(eloTeam19)
eloTeam19 <- eloTeam19 %>%
mutate(Rank = seq.int(nrow(eloTeam19)))
View(eloTeam19)
eloTeam19 <- b19EloTeam %>%
rename(Team = Batting_Team) %>%
left_join(p19EloTeam, by = c("Team" = "Pitching_Team")) %>%
mutate(aggTeamElo = (aggBattingElo + aggPitchingElo) / 2) %>%
left_join(RS19Team, by = c("Team" = "Batting_Team")) %>%
left_join(RA19Team, by = c("Team" = "Pitching_Team")) %>%
arrange(desc(aggTeamElo)) %>%
mutate(Rank = seq.int(nrow(eloTeam19)))
View(eloTeam19)
View(eloTeam19)
View(eloTeam19)
eloTeam19 <- b19EloTeam %>%
rename(Team = Batting_Team) %>%
left_join(p19EloTeam, by = c("Team" = "Pitching_Team")) %>%
mutate(aggTeamElo = (aggBattingElo + aggPitchingElo) / 2) %>%
left_join(RS19Team, by = c("Team" = "Batting_Team")) %>%
left_join(RA19Team, by = c("Team" = "Pitching_Team")) %>%
arrange(desc(aggTeamElo)) %>%
mutate(Rank = seq.int(nrow(eloTeam19)))
View(dt1)
View(eloTeam19)
eloTeam19 <- b19EloTeam %>%
rename(Team = Batting_Team) %>%
left_join(p19EloTeam, by = c("Team" = "Pitching_Team")) %>%
mutate(aggTeamElo = (aggBattingElo + aggPitchingElo) / 2) %>%
left_join(RS19Team, by = c("Team" = "Batting_Team")) %>%
left_join(RA19Team, by = c("Team" = "Pitching_Team")) %>%
arrange(desc(aggTeamElo)) %>%
mutate(Rank = seq.int(nrow(eloTeam19))) %>%
rename('Team Batting Elo' = aggBattingElo,
'Team Pitching Elo' = aggPitchingElo,
'Aggregate Team Elo', aggTeamElo,
'Runs Scored', Runs_Scored,
'Runs Against', Runs_Against) %>%
select(Rank, 'Team Batting Elo', 'Team Pitching Elo', 'Aggregate Team Elo', 'Runs Scored', 'Runs Against')
eloTeam19 <- b19EloTeam %>%
rename(Team = Batting_Team) %>%
left_join(p19EloTeam, by = c("Team" = "Pitching_Team")) %>%
mutate(aggTeamElo = (aggBattingElo + aggPitchingElo) / 2) %>%
left_join(RS19Team, by = c("Team" = "Batting_Team")) %>%
left_join(RA19Team, by = c("Team" = "Pitching_Team")) %>%
arrange(desc(aggTeamElo))
eloTeam19 <- eloTeam19 %>%
mutate(Rank = seq.int(nrow(eloTeam19))) %>%
rename('Team Batting Elo' = aggBattingElo,
'Team Pitching Elo' = aggPitchingElo,
'Aggregate Team Elo', aggTeamElo,
'Runs Scored', Runs_Scored,
'Runs Against', Runs_Against) %>%
select(Rank, 'Team Batting Elo', 'Team Pitching Elo', 'Aggregate Team Elo', 'Runs Scored', 'Runs Against')
eloTeam19 <- eloTeam19 %>%
mutate(Rank = seq.int(nrow(eloTeam19))) %>%
rename('Team BattingElo' = aggBattingElo,
'Team PitchingElo' = aggPitchingElo,
'Aggregate TeamElo', aggTeamElo,
'Runs Scored', Runs_Scored,
'Runs Against', Runs_Against) %>%
select(Rank, 'Team Batting Elo', 'Team Pitching Elo', 'Aggregate Team Elo', 'Runs Scored', 'Runs Against')
p19Elo25 <- p19Elo %>%
filter(Rank < 26) %>%
rename('Elo Rank' = Rank,
'First Name' = first_name,
'Last Name' = last_name,
'Pitching Team' = Pitching_Team,
wOBA = woba) %>%
select('Elo Rank', 'First Name', 'Last Name', 'Pitching Team', preseasonElo, currentElo, wOBA, ERA, WHIP)
eloTeam19 <- b19EloTeam %>%
rename(Team = Batting_Team) %>%
left_join(p19EloTeam, by = c("Team" = "Pitching_Team")) %>%
mutate(aggTeamElo = (aggBattingElo + aggPitchingElo) / 2) %>%
left_join(RS19Team, by = c("Team" = "Batting_Team")) %>%
left_join(RA19Team, by = c("Team" = "Pitching_Team")) %>%
arrange(desc(aggTeamElo))
eloTeam19 <- eloTeam19 %>%
mutate(Rank = seq.int(nrow(eloTeam19))) %>%
rename('Team Batting Elo' = aggBattingElo,
'Team Pitching Elo' = aggPitchingElo,
'Aggregate Team Elo', aggTeamElo,
'Runs Scored', Runs_Scored,
'Runs Against', Runs_Against) %>%
select(Rank, 'Team Batting Elo', 'Team Pitching Elo', 'Aggregate Team Elo', 'Runs Scored', 'Runs Against')
eloTeam19 <- b19EloTeam %>%
rename(Team = Batting_Team) %>%
left_join(p19EloTeam, by = c("Team" = "Pitching_Team")) %>%
mutate(aggTeamElo = (aggBattingElo + aggPitchingElo) / 2) %>%
left_join(RS19Team, by = c("Team" = "Batting_Team")) %>%
left_join(RA19Team, by = c("Team" = "Pitching_Team")) %>%
arrange(desc(aggTeamElo))
eloTeam19 <- eloTeam19 %>%
mutate(Rank = seq.int(nrow(eloTeam19))) %>%
rename('Team Batting Elo' = aggBattingElo,
'Team Pitching Elo' = aggPitchingElo,
'Aggregate Team Elo' = aggTeamElo,
'Runs Scored' = Runs_Scored,
'Runs Against' = Runs_Against) %>%
select(Rank, 'Team Batting Elo', 'Team Pitching Elo', 'Aggregate Team Elo', 'Runs Scored', 'Runs Against')
eloTeam19 <- b19EloTeam %>%
rename(Team = Batting_Team) %>%
left_join(p19EloTeam, by = c("Team" = "Pitching_Team")) %>%
mutate(aggTeamElo = (aggBattingElo + aggPitchingElo) / 2) %>%
left_join(RS19Team, by = c("Team" = "Batting_Team")) %>%
left_join(RA19Team, by = c("Team" = "Pitching_Team")) %>%
arrange(desc(aggTeamElo))
eloTeam19 <- eloTeam19 %>%
mutate(Rank = seq.int(nrow(eloTeam19))) %>%
rename('Team Batting Elo' = aggBattingElo,
'Team Pitching Elo' = aggPitchingElo,
'Aggregate Team Elo' = aggTeamElo,
'Runs Scored' = Runs_Scored,
'Runs Against' = Runs_Against) %>%
select(Rank, Team, 'Team Batting Elo', 'Team Pitching Elo', 'Aggregate Team Elo', 'Runs Scored', 'Runs Against')
View(eloTeam19)
formattable(eloTeam19, align =c ("l","l", "c", "c", "c", "c"), list(
`Rank` = formatter("span", style = ~ style(color = "grey",font.weight = "bold")),
`Team` = formatter("span", style = ~ style(color = "grey",font.weight = "bold")),
`Team Batting Elo`= color_tile(customBlue0, customBlue),
`Team Pitching Elo`= color_tile(customBlue0, customBlue),
`Aggregate Team Elo`= color_tile(customBlue0, customBlue),
`Runs Scored`= color_tile(customBlue0, customBlue),
`Runs Against`= color_tile(customBlue0, customBlue)))
formattable(eloTeam19, align =c ("l","l", "c", "c", "c", "c", "c"), list(
`Rank` = formatter("span", style = ~ style(color = "grey",font.weight = "bold")),
`Team` = formatter("span", style = ~ style(color = "grey",font.weight = "bold")),
`Team Batting Elo`= color_tile(customBlue0, customBlue),
`Team Pitching Elo`= color_tile(customBlue0, customBlue),
`Aggregate Team Elo`= color_tile(customBlue0, customBlue),
`Runs Scored`= color_tile(customBlue0, customBlue),
`Runs Against`= color_tile(customBlue0, customBlue)))
formattable(eloTeam19, align =c ("l","l", "c", "c", "c", "c", "c"), list(
`Rank` = formatter("span", style = ~ style(color = "grey",font.weight = "bold")),
`Team` = formatter("span", style = ~ style(color = "grey",font.weight = "bold")),
`Team Batting Elo`= color_tile(customBlue0, customBlue),
`Team Pitching Elo`= color_tile(customBlue0, customBlue),
`Aggregate Team Elo`= color_tile(customBlue0, customBlue),
`Runs Scored`= color_tile(customBlue0, customBlue),
`Runs Against`= color_tile(customBlue, customBlue0)))
View(p19Elo25)
load("~/Desktop/Junior - Summer/Wyner Research/playerEloWorkspace.RData")
View(stateMatrix)
View(RE18Parks)
allPlayerElo <- allPlayerElo[-1, ]
isolateBNames <- b19Elo %>%
select(player_id, first_name, last_name)
isolatePNames <- p19Elo %>%
select(player_id, first_name, last_name)
allPlayerEloNames <- allPlayerElo %>%
left_join(isolateBNames, by = c("playerID" = "player_id")) %>%
left_join(isolatePNames, by = c("playerID" = "player_id"))
positions <- allPlayerEloNames %>%
mutate(isPitcher = !is.na(last_name.y),
Name = ifelse(isPitcher, paste(first_name.y, last_name.y),
paste(first_name.x, last_name.x))) %>%
arrange(PA) %>%
distinct() %>%
group_by(playerID, PA) %>%
filter(playerElo == max(playerElo)) %>%
ungroup() %>%
mutate(isPitcher = factor(isPitcher, levels = c(T, F),
labels = c("Pitcher", "Batter")))
player_map <- distinct(positions, playerID, Name)
require(tidyverse)
require(data.table)
require(formattable)
require(htmltools)
require(webshot)
allPlayerElo <- allPlayerElo[-1, ]
isolateBNames <- b19Elo %>%
select(player_id, first_name, last_name)
isolatePNames <- p19Elo %>%
select(player_id, first_name, last_name)
allPlayerEloNames <- allPlayerElo %>%
left_join(isolateBNames, by = c("playerID" = "player_id")) %>%
left_join(isolatePNames, by = c("playerID" = "player_id"))
positions <- allPlayerEloNames %>%
mutate(isPitcher = !is.na(last_name.y),
Name = ifelse(isPitcher, paste(first_name.y, last_name.y),
paste(first_name.x, last_name.x))) %>%
arrange(PA) %>%
distinct() %>%
group_by(playerID, PA) %>%
filter(playerElo == max(playerElo)) %>%
ungroup() %>%
mutate(isPitcher = factor(isPitcher, levels = c(T, F),
labels = c("Pitcher", "Batter")))
player_map <- distinct(positions, playerID, Name)
View(player_map)
player_highlight <- c("Vladimir Guerrero Jr.", "Mike Trout", "Buster Posey",
"Ramon Laureano", "Hyun-Jin Ryu", "Jon Lester")
player_highlight <- c("Vladimir Guerrero Jr.", "Mike Trout", "Buster Posey",
"Ramon Laureano", "Hyun-Jin Ryu", "Jon Lester", "Trevor Bauer",
"Zach Eflin", "Cole Hamels")
player_ids <- player_map$playerID[match(player_highlight, player_map$Name)]
background_data <- filter(positions, !playerID %in% player_ids)
highlight_data <- filter(positions, playerID %in% player_ids)
last_point <- highlight_data %>%
group_by(playerID) %>%
filter(PA == max(PA))
ggplot(background_data) +
geom_path(aes(PA, playerElo, group = playerID), alpha = 0.1) +
geom_path(data = highlight_data, aes(PA, playerElo, group = playerID, color = Name),
size = 1.5) +
geom_hline(data = highlight_data, aes(yintercept = 972.2389), size = 1.2) +
geom_label(data = last_point, aes(PA, playerElo, group = playerID, color = Name,
label = Name), hjust = "inward") +
facet_wrap(.~paste0(isPitcher, "s"), nrow = 2, ncol = 1, scales = "free_x") +
labs(title = "2018-2019 MLB playerElo Progress by Plate Appearance",
x = "Plate Appearance", y = "playerElo Rating") +
theme_classic() +
theme(legend.position = "none",
strip.text = element_text(face = "bold", size = 14),
strip.background = element_blank(),
plot.title = element_text(face = "bold", size = 16),
axis.title = element_text(face = "bold"),
axis.ticks = element_blank()) +
scale_x_continuous(expand = c(0.01, 0.01))
b19EloTeam <- b19Elo %>%
mutate(eloWeight = currentElo * pa) %>%
group_by(Batting_Team) %>%
summarise(TeamBattingElo = sum(eloWeight) / sum(pa)) %>%
drop_na()
p19EloTeam <- p19Elo %>%
mutate(eloWeight = currentElo * pa) %>%
group_by(Pitching_Team) %>%
summarise(TeamPitchingElo = sum(eloWeight) / sum(pa)) %>%
drop_na()
RS19Team <- RE19 %>%
group_by(Batting_Team) %>%
summarise(Runs_Scored = sum(Runs_OnPlay))
RA19Team <- RE19 %>%
group_by(Pitching_Team) %>%
summarise(Runs_Against = sum(Runs_OnPlay))
eloTeam19 <- b19EloTeam %>%
rename(Team = Batting_Team) %>%
left_join(p19EloTeam, by = c("Team" = "Pitching_Team")) %>%
mutate(aggTeamElo = (TeamBattingElo + TeamPitchingElo) / 2) %>%
left_join(RS19Team, by = c("Team" = "Batting_Team")) %>%
left_join(RA19Team, by = c("Team" = "Pitching_Team")) %>%
arrange(desc(aggTeamElo)) %>%
mutate(Rank = seq.int(30)) %>%
rename('Team Batting Elo' = TeamBattingElo,
'Team Pitching Elo' = TeamPitchingElo,
'Aggregate Team Elo' = aggTeamElo,
'Runs Scored' = Runs_Scored,
'Runs Against' = Runs_Against) %>%
select(Rank, Team, 'Team Batting Elo', 'Team Pitching Elo',
'Aggregate Team Elo', 'Runs Scored', 'Runs Against')
ggplot(teamEloRankings, aes(teamEloRankings$`Team Batting Elo`, teamEloRankings$`Runs Scored`)) + geom_point()
View(isolatePNames)
View(eloTeam19)
ggplot(eloTeam19, aes(`Team Batting Elo`, `Runs Scored`)) + geom_point()
View(b19EloCD)
View(b19EloPA100)
View(b19EloPA100)
View(eloTeam19)
View(p19EloPA100)
View(p19EloCD)
player_highlight <- c("Darwinzon Hernandez")
player_ids <- player_map$playerID[match(player_highlight, player_map$Name)]
background_data <- filter(positions, !playerID %in% player_ids)
highlight_data <- filter(positions, playerID %in% player_ids)
last_point <- highlight_data %>%
group_by(playerID) %>%
filter(PA == max(PA))
ggplot(background_data) +
geom_path(aes(PA, playerElo, group = playerID), alpha = 0.1) +
geom_path(data = highlight_data, aes(PA, playerElo, group = playerID, color = Name),
size = 1.5) +
geom_hline(data = highlight_data, aes(yintercept = 972.2389), size = 1.2) +
geom_label(data = last_point, aes(PA, playerElo, group = playerID, color = Name,
label = Name), hjust = "inward") +
facet_wrap(.~paste0(isPitcher, "s"), nrow = 2, ncol = 1, scales = "free_x") +
labs(title = "2018-2019 MLB playerElo Progress by Plate Appearance",
x = "Plate Appearance", y = "playerElo Rating") +
theme_classic() +
theme(legend.position = "none",
strip.text = element_text(face = "bold", size = 14),
strip.background = element_blank(),
plot.title = element_text(face = "bold", size = 16),
axis.title = element_text(face = "bold"),
axis.ticks = element_blank()) +
scale_x_continuous(expand = c(0.01, 0.01))
require(tidyverse)
require(data.table)
require(formattable)
require(htmltools)
require(webshot)
player_highlight <- c("Darwinzon Hernandez")
player_ids <- player_map$playerID[match(player_highlight, player_map$Name)]
background_data <- filter(positions, !playerID %in% player_ids)
highlight_data <- filter(positions, playerID %in% player_ids)
last_point <- highlight_data %>%
group_by(playerID) %>%
filter(PA == max(PA))
ggplot(background_data) +
geom_path(aes(PA, playerElo, group = playerID), alpha = 0.1) +
geom_path(data = highlight_data, aes(PA, playerElo, group = playerID, color = Name),
size = 1.5) +
geom_hline(data = highlight_data, aes(yintercept = 972.2389), size = 1.2) +
geom_label(data = last_point, aes(PA, playerElo, group = playerID, color = Name,
label = Name), hjust = "inward") +
facet_wrap(.~paste0(isPitcher, "s"), nrow = 2, ncol = 1, scales = "free_x") +
labs(title = "2018-2019 MLB playerElo Progress by Plate Appearance",
x = "Plate Appearance", y = "playerElo Rating") +
theme_classic() +
theme(legend.position = "none",
strip.text = element_text(face = "bold", size = 14),
strip.background = element_blank(),
plot.title = element_text(face = "bold", size = 16),
axis.title = element_text(face = "bold"),
axis.ticks = element_blank()) +
scale_x_continuous(expand = c(0.01, 0.01))
library("XML")
qb_fp <- readHTMLTable("http://www.fantasypros.com/nfl/projections/qb.php", stringsAsFactors = FALSE)$data
qb_fp <- readHTMLTable("http://www.fantasypros.com/nfl/projections/qb.php", stringsAsFactors = FALSE)$data
qb_fp <- readHTMLTable("https://www.fantasypros.com/nfl/rankings/qb-cheatsheets.php", stringsAsFactors = FALSE)$data
qb_fp <- readHTMLTable("https://www.fantasypros.com/nfl/projections/qb.php?week=draft", stringsAsFactors = FALSE)$data
qb_fp <- readHTMLTable("https://www.fantasypros.com/nfl/projections/qb.php?week=draft", stringsAsFactors = FALSE)$data
qb_fp <- readHTMLTable("https://www.fantasypros.com/nfl/projections/qb.php?week=draft")$data
qb_fp <- readHTMLTable("https://www.fantasypros.com/nfl/projections/qb.php?week=draft", stringsAsFactors = FALSE)
require(tidyverse)
require(data.table)
require(DT)
require(baseballr)
require(shiny)
setwd("~/Desktop/Jacob/Personal_R/playerElo")
runApp('appconstruction.R')
shinyApp(ui = ui, server = server)
runApp('appconstruction.R')
runApp('appconstruction.R')
require(tidyverse)
require(data.table)
require(DT)
require(baseballr)
require(shiny)
setwd("~/Desktop/Jacob/Personal_R/playerElo")
